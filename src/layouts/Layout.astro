---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import SpaceBackground from '../components/SpaceBackground.astro';
import LanguageDetection from '../components/LanguageDetection.astro';
import { getLangFromUrl, useTranslations } from '../utils/i18n';

export interface Props {
  title: string;
  description?: string;
}

const { title, description } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <BaseHead title={title} description={description || t('site.description')} />
    
    <!-- Preload critical resources -->
    <link rel="preload" href="/klaro-config.js" as="script">
    
    <!-- Klaro CSS - load asynchronously since it's not critical for initial render -->
    <link rel="preload" as="style" href="https://cdn.jsdelivr.net/npm/klaro/dist/klaro.min.css" onload="this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/klaro/dist/klaro.min.css" /></noscript>
  </head>
  <body>
    <SpaceBackground />
    <LanguageDetection />
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    <div id="klaro"></div>
    
    <!-- Load Klaro asynchronously after page load to prevent blocking -->
    <script>
      // Defer Klaro loading to prevent forced reflow
      function loadKlaro() {
        // Use requestIdleCallback for better performance with longer timeout
        if ('requestIdleCallback' in window) {
          requestIdleCallback(() => {
            loadKlaroScripts();
          }, { timeout: 3000 });
        } else {
          // Fallback for browsers without requestIdleCallback
          setTimeout(loadKlaroScripts, 2000);
        }
      }
      
      function loadKlaroScripts() {
        // Load config first
        const configScript = document.createElement('script');
        configScript.src = '/klaro-config.js';
        configScript.async = true;
        
        // Load Klaro library after config
        configScript.onload = function() {
          const klaroScript = document.createElement('script');
          klaroScript.src = 'https://cdn.jsdelivr.net/npm/klaro/dist/klaro.min.js';
          klaroScript.async = true;
          document.head.appendChild(klaroScript);
        };
        
        document.head.appendChild(configScript);
      }
      
      // Load Klaro after page is fully loaded with additional delay
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          // Additional delay to prioritize critical content
          setTimeout(loadKlaro, 1500);
        });
      } else {
        // If DOM is already loaded, wait a bit more
        setTimeout(loadKlaro, 1500);
      }
    </script>
  </body>
</html>

<style>
  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  
  main {
    flex: 1;
    padding-top: 80px; /* Account for fixed header */
    transition: padding-top 0.3s ease; /* Smooth transition when banner appears */
  }
  
  /* Adjust main padding when language banner is shown */
  body:has(.language-detection-banner.show) main {
    padding-top: 140px; /* Header height + banner height */
  }
</style> 