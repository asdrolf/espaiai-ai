---
import Layout from '../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations, getNavLink } from '../../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Layout title={`${t('nav.pricing')} | ${t('site.title')}`} description={t('meta.pricing.description')}>
  <section class="section">
    <div class="container">
      <div class="section-header text-center mb-4">
        <h1>{t('pricing.hero.title')}</h1>
        <p class="text-large">{t('pricing.hero.subtitle')}</p>
        <div class="important-notice">
          <p><strong>{t('pricing.guarantee')}</strong></p>
        </div>
      </div>
      
      <div class="pricing-grid">
        <div class="pricing-card card fade-in">
          <div class="plan-header">
            <h3>{t('pricing.basic.title')}</h3>
            <div class="price">
              <span class="currency">€</span>
              <span class="amount">{t('pricing.basic.price')}</span>
              <span class="period">{t('pricing.basic.period')}</span>
            </div>
            <p class="device-limit">{t('pricing.basic.devices')}</p>
          </div>
          <ul class="features">
            {t('pricing.basic.features').map((feature: string) => (
              <li>✓ {feature}</li>
            ))}
            <li><strong>{t('pricing.basic.automation')}</strong></li>
          </ul>
          <a href={getNavLink('contact', lang)} class="btn btn-secondary">{t('pricing.cta')}</a>
        </div>
        
        <div class="pricing-card card featured fade-in">
          <div class="plan-header">
            <div class="popular-badge">{t('pricing.popular')}</div>
            <h3>{t('pricing.pro.title')}</h3>
            <div class="price">
              <span class="currency">€</span>
              <span class="amount">{t('pricing.pro.price')}</span>
              <span class="period">{t('pricing.pro.period')}</span>
            </div>
            <p class="device-limit">{t('pricing.pro.devices')}</p>
          </div>
          <ul class="features">
            {t('pricing.pro.features').map((feature: string) => (
              <li>✓ {feature}</li>
            ))}
            <li><strong>{t('pricing.pro.automation')}</strong></li>
          </ul>
          <a href={getNavLink('contact', lang)} class="btn">{t('pricing.cta')}</a>
        </div>
        
        <div class="pricing-card card fade-in">
          <div class="plan-header">
            <h3>{t('pricing.advanced.title')}</h3>
            <div class="price">
              <span class="currency">€</span>
              <span class="amount">{t('pricing.advanced.price')}</span>
              <span class="period">{t('pricing.advanced.period')}</span>
            </div>
            <p class="device-limit">{t('pricing.advanced.devices')}</p>
          </div>
          <ul class="features">
            {t('pricing.advanced.features').map((feature: string) => (
              <li>✓ {feature}</li>
            ))}
            <li><strong>{t('pricing.advanced.automation')}</strong></li>
          </ul>
          <a href={getNavLink('contact', lang)} class="btn">{t('pricing.cta')}</a>
        </div>
      </div>
      
      <div class="value-proposition mt-4">
        <div class="grid grid-2">
          <div class="card fade-in">
            <h3>{t('pricing.roi.title')}</h3>
            <p>{t('pricing.roi.description')}</p>
          </div>
          
          <div class="card fade-in">
            <h3>{t('pricing.setup.title')}</h3>
            <p>{t('pricing.setup.description')}</p>
          </div>
        </div>
      </div>
      
      <div class="pilot-notice mt-4">
        <div class="card">
          <h3>{t('pricing.pilot.title')}</h3>
          <p>{t('pricing.pilot.description')}</p>
        </div>
      </div>

    </div>
  </section>
</Layout>

<style>
  .important-notice {
    background: linear-gradient(135deg, rgba(6, 182, 212, 0.1) 0%, rgba(6, 182, 212, 0.05) 100%);
    border: 1px solid rgba(6, 182, 212, 0.3);
    border-radius: 12px;
    padding: 1.5rem;
    margin: 2rem auto;
    max-width: 800px;
  }
  
  .important-notice p {
    margin: 0;
    font-size: 1.1rem;
    color: var(--space-white);
  }
  
  .pricing-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
  }
  
  .pricing-card {
    position: relative;
    text-align: center;
    padding: 2rem;
  }
  
  .pricing-card.featured {
    transform: scale(1.05);
    border-color: var(--accent);
    box-shadow: 0 10px 30px rgba(6, 182, 212, 0.3);
  }
  
  .popular-badge {
    position: absolute;
    top: -10px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--accent-gradient);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
  }
  
  .plan-header {
    margin-bottom: 2rem;
  }
  
  .plan-header h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }
  
  .price {
    display: flex;
    align-items: baseline;
    justify-content: center;
    gap: 0.25rem;
    margin-bottom: 0.5rem;
  }
  
  .currency {
    font-size: 1.5rem;
    color: var(--accent);
  }
  
  .amount {
    font-size: 3rem;
    font-weight: 700;
    color: var(--space-white);
  }
  
  .period {
    font-size: 0.875rem;
    color: var(--space-gray);
  }
  
  .device-limit {
    font-size: 0.9rem;
    color: var(--accent);
    font-weight: 600;
    margin: 0;
  }
  
  .features {
    list-style: none;
    padding: 0;
    margin: 0 0 2rem 0;
    text-align: left;
  }
  
  .features li {
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .features li:last-child {
    border-bottom: none;
  }
  
  .value-proposition {
    margin-bottom: 3rem;
  }
  
  .pilot-notice {
    margin-bottom: 3rem;
  }
  
  .pilot-notice .card {
    background: linear-gradient(135deg, rgba(255, 193, 7, 0.1) 0%, rgba(255, 193, 7, 0.05) 100%);
    border: 1px solid rgba(255, 193, 7, 0.3);
    text-align: center;
  }
  
  .pilot-notice h3 {
    color: #ffc107;
    margin-bottom: 1rem;
  }
  
  .pilot-notice p {
    color: var(--space-white);
    font-size: 1rem;
    line-height: 1.6;
  }
  
  .faq-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }
  
  .faq-item {
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
  }
  
  .faq-item h4 {
    margin-bottom: 1rem;
    color: var(--accent);
  }
  
  @media (max-width: 768px) {
    .pricing-card.featured {
      transform: none;
    }
    
    .pricing-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 
  }
</style> 