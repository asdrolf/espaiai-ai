---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE, LANGUAGES } from '../consts';
import { getLangFromUrl, useTranslations } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Map language codes to flag classes
const flagMap = {
  en: 'lang-icon-en',
  es: 'lang-icon-es', 
  ca: 'lang-icon-ca',
  de: 'lang-icon-de'
};
---

<header class="header">
  <div class="container">
    <nav class="nav">
      <div class="nav-brand">
        <a href={lang === 'en' ? '/' : `/${lang}/`} class="logo">
          <span class="logo-icon">
            <svg class="logo-svg" aria-hidden="true" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg">
              <defs>
                <linearGradient id="logo-gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" stop-color="#06b6d4" />
                  <stop offset="100%" stop-color="#818cf8" />
                </linearGradient>
                <style>.cls-1{opacity:0.2;}</style>
              </defs>
              <g id="galaxy" fill="url(#logo-gradient)">
                <path d="M32,26a6,6,0,1,0,6,6A6,6,0,0,0,32,26Zm0,10a4,4,0,1,1,4-4A4,4,0,0,1,32,36Z"/>
                <path d="M18.38,25.71A15.06,15.06,0,0,1,32,17a1,1,0,0,1,0,2,13,13,0,0,0-11.8,7.55A1,1,0,0,1,18.38,25.71Z"/>
                <path d="M17,32c0-.38,0-.76,0-1.13a1,1,0,0,1,2,.18c0,.31,0,.63,0,.95A1,1,0,0,1,17,32Z"/>
                <path d="M32,47a1,1,0,0,1,0-2A13,13,0,0,0,45,32a1,1,0,0,1,2,0A15,15,0,0,1,32,47Z"/>
                <path d="M20.38,46.82a1,1,0,0,1-.86.49c-.9,0-5.64-4.51-7.06-11a1,1,0,0,1,2-.43,18,18,0,0,0,5,9C20.06,45.46,20.88,46,20.38,46.82Z"/>
                <path d="M12,33.05q0-.52,0-1a1,1,0,0,1,2,0c0,.32,0,.64,0,1A1,1,0,0,1,12,33.05Z"/>
                <path d="M33,51a1,1,0,0,1-1,1,19.71,19.71,0,0,1-7.79-1.58A1,1,0,0,1,23.75,49v0c.57-.84,1.36-.29,2.13,0C30.83,50.74,33,49.23,33,51Z"/>
                <path d="M50,32a17.3,17.3,0,0,0-.12-2.09,1,1,0,0,1,2-.24A19.07,19.07,0,0,1,52,32,1,1,0,0,1,50,32Z"/>
                <path d="M46.9,21.92a18,18,0,0,0-8.26-6.65,1,1,0,0,1,.74-1.86,20,20,0,0,1,9.18,7.39A1,1,0,0,1,46.9,21.92Z"/>
                <path d="M36.11,14.45c-.26,0-.27-.07-1.27-.23a1,1,0,0,1,.31-2c.4.06.79.13,1.17.22A1,1,0,0,1,36.11,14.45Z"/>
                <path d="M13.08,15.66A24.94,24.94,0,0,1,28.9,7.2a1,1,0,0,1,.24,2A23,23,0,0,0,14.59,17,1,1,0,0,1,13.08,15.66Z"/>
                <path d="M7.33,28a24.68,24.68,0,0,1,3.6-9.41,1,1,0,0,1,1.38-.3c1.69,1.08-1.8,2.59-3,10A1,1,0,0,1,7.33,28Z"/>
                <path d="M7,32c0-.33,0-.65,0-1a1,1,0,0,1,2,.08c0,.3,0,.6,0,.9A1,1,0,0,1,7,32Z"/>
                <path d="M42.32,31.05a2.85,2.85,0,0,1-1.41-4.35,1,1,0,0,0-1.12-1.53,2.87,2.87,0,0,1-3.7-2.7,1,1,0,0,0-1.8-.58,2.87,2.87,0,0,1-4.58,0,1,1,0,0,0-1.8.58,2.86,2.86,0,0,1-3.7,2.7,1,1,0,0,0-1.12,1.53,2.86,2.86,0,0,1-1.41,4.35,1,1,0,0,0,0,1.9,2.85,2.85,0,0,1,1.41,4.35,1,1,0,0,0,1.12,1.53,2.86,2.86,0,0,1,3.7,2.7,1,1,0,0,0,1.8.58,2.87,2.87,0,0,1,4.58,0,1,1,0,0,0,1.11.35c1.25-.4.08-1.91,1.87-3.21s2.85.28,3.63-.78-1.07-1.61-.37-3.7S43,33.35,43,32A1,1,0,0,0,42.32,31.05ZM38.5,36.72a4.93,4.93,0,0,0-4,2.92,5,5,0,0,0-5,0,4.91,4.91,0,0,0-4-2.92A4.89,4.89,0,0,0,24,32a4.89,4.89,0,0,0,1.53-4.72,4.93,4.93,0,0,0,4-2.92,5,5,0,0,0,5,0,4.93,4.93,0,0,0,4,2.92A4.89,4.89,0,0,0,40,32,4.89,4.89,0,0,0,38.5,36.72Z"/>
                <path class="cls-1" d="M40,32a4.89,4.89,0,0,1-1.53-4.72,4.93,4.93,0,0,1-4-2.92,5,5,0,0,1-5,0,4.93,4.93,0,0,1-4,2.92A4.89,4.89,0,0,1,24,32a4.89,4.89,0,0,1,1.53,4.72,4.93,4.93,0,0,1,4,2.92,5,5,0,0,1,5,0,4.91,4.91,0,0,1,4-2.92A4.89,4.89,0,0,1,40,32Zm-8,6a6,6,0,1,1,6-6A6,6,0,0,1,32,38Z"/>
                <path d="M31.5,5A3.5,3.5,0,1,0,35,8.5,3.51,3.51,0,0,0,31.5,5Zm0,5a1.5,1.5,0,0,1,0-3A1.5,1.5,0,0,1,31.5,10Z"/>
                <path class="cls-1" d="M33,8.5a1.5,1.5,0,0,1-3,0A1.5,1.5,0,0,1,33,8.5Z"/>
                <path d="M49.5,20a5.41,5.41,0,0,0-3.23,1.06A5.49,5.49,0,1,0,49.5,20Zm0,9A3.5,3.5,0,1,1,53,25.5,3.5,3.5,0,0,1,49.5,29Z"/>
                <circle class="cls-1" cx="49.5" cy="25.5" r="3.5"/>
                <path d="M20.62,25.73A3.41,3.41,0,0,0,18.5,25,3.5,3.5,0,0,0,17,31.66a3.35,3.35,0,0,0,2,.3A3.49,3.49,0,0,0,20.62,25.73ZM17,28.5a1.5,1.5,0,0,1,3,0A1.5,1.5,0,0,1,17,28.5Z"/>
                <path class="cls-1" d="M20,28.5A1.5,1.5,0,1,1,18.5,27,1.5,1.5,0,0,1,20,28.5Z"/>
                <path d="M32,55a1,1,0,0,1,0-2l.92,0A1,1,0,0,1,33,55Z"/>
                <path d="M45.48,50.63a23,23,0,0,1-9.42,4,1,1,0,0,1-1.16-.81c-.36-1.93,2.86-.48,8.6-4.27.71-.45,1.29-1.11,2-.51a2,2,0,0,0,.19.22A1,1,0,0,1,45.48,50.63Z"/>
                <path d="M51,41a20.4,20.4,0,0,0,1.81-6,1,1,0,0,1,2,.28,22.61,22.61,0,0,1-2,6.58A1,1,0,0,1,51,41Z"/>
                <path d="M47.5,43A4.5,4.5,0,1,0,52,47.5,4.5,4.5,0,0,0,47.5,43Zm-2,6A2.5,2.5,0,1,1,50,47.5,2.5,2.5,0,0,1,45.54,49.05Z"/>
                <path class="cls-1" d="M50,47.5A2.5,2.5,0,1,1,47.5,45,2.51,2.51,0,0,1,50,47.5Z"/>
                <path d="M9,39a3,3,0,1,0,3,3A3,3,0,0,0,9,39Zm0,4a1,1,0,0,1,0-2A1,1,0,0,1,9,43Z"/>
                <path class="cls-1" d="M10,42a1,1,0,0,1-2,0A1,1,0,0,1,10,42Z"/>
                <path d="M45.5,8A2.5,2.5,0,1,0,48,10.5,2.5,2.5,0,0,0,45.5,8Zm0,3a.5.5,0,0,1,0-1A.5.5,0,0,1,45.5,11Z"/>
                <path class="cls-1" d="M46,10.5a.5.5,0,0,1-1,0A.5.5,0,0,1,46,10.5Z"/>
                <path d="M22,44a4,4,0,1,0,3.89,4.93A4,4,0,0,0,22,44Zm-1.62,2.82A2,2,0,0,1,23.76,49v0A2,2,0,1,1,20.38,46.82Z"/>
                <path class="cls-1" d="M24,48a2.08,2.08,0,0,1-.25,1A2,2,0,1,1,24,48Z"/>
                <path d="M26,59a2,2,0,1,1,2-2A2,2,0,0,1,26,59Zm0-2h0Zm0,0h0Zm0,0h0Zm0,0h0Zm0,0h0Zm0,0h0Zm0,0h0Zm0,0h0Z"/>
              </g>
            </svg>
          </span>
          <span class="logo-text">Espai.AI</span>
        </a>
      </div>
      
      <div class="nav-menu" id="navMenu" aria-hidden="true">
        <HeaderLink href={lang === 'en' ? '/' : `/${lang}/`}>{t('nav.home')}</HeaderLink>
        <HeaderLink href={lang === 'en' ? '/about' : `/${lang}/about`}>{t('nav.about')}</HeaderLink>
        <HeaderLink href={lang === 'en' ? '/pricing' : `/${lang}/pricing`}>{t('nav.pricing')}</HeaderLink>
        <HeaderLink href={lang === 'en' ? '/faq' : `/${lang}/faq`}>{t('nav.faq')}</HeaderLink>
      </div>
      
      <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="Toggle mobile menu" aria-expanded="false">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
      
      <div class="nav-actions">
        <div class="language-selector">
          <div class="language-display" id="language-display">
            <span class={`lang-icon ${flagMap[lang]}`}></span>
            <span class="language-name">{LANGUAGES[lang]}</span>
            <svg class="dropdown-arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
              <path d="M1 1L6 6L11 1" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </div>
          <div class="language-dropdown" id="language-dropdown">
            {Object.entries(LANGUAGES).map(([code, name]) => (
              <div class="language-option" data-lang={code} onclick={`changeLanguage('${code}')`}>
                <span class={`lang-icon ${flagMap[code]}`}></span>
                <span class="language-option-name">{name}</span>
              </div>
            ))}
          </div>
        </div>
        <a href={lang === 'en' ? '/contact' : `/${lang}/contact`} class="btn btn-secondary">{t('nav.contact')}</a>
      </div>
    </nav>
  </div>
</header>

<style>
  @font-face {
    font-family: 'Nasalization';
    src: url('/fonts/NasalizationRg.otf') format('opentype');
    font-display: swap;
  }
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(10, 10, 15, 0.9);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }
  
  .nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 0;
  }
  
  .logo {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  .logo:hover {
    transform: scale(1.02);
  }
  
  .logo-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 48px;
    width: 48px;
    margin-right: -16px;
  }
  .logo-svg {
    width: 100%;
    height: 100%;
    fill: url(#logo-gradient);
  }
  .logo-text {
    font-family: 'Nasalization', 'Atkinson Hyperlegible', Arial, sans-serif;
    font-size: 1.5rem;
    font-weight: 700;
    background: var(--accent-gradient);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
  }
  
  .nav-menu {
    display: flex;
    gap: 2rem;
    align-items: center;
  }
  
  .nav-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  /* Language selector styles */
  .language-selector {
    position: relative;
  }

  .language-display {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
    min-width: 120px;
  }

  .language-display:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
  }

  .lang-icon {
    display: inline-block;
    width: 25px;
    height: 15px;
    background-image: url('/lang-flags.png');
    background-repeat: no-repeat;
    flex-shrink: 0;
  }

  .language-name {
    color: white;
    font-size: 0.9rem;
    flex: 1;
  }

  .dropdown-arrow {
    color: rgba(255, 255, 255, 0.7);
    transition: transform 0.3s ease;
  }

  .language-selector.open .dropdown-arrow {
    transform: rotate(180deg);
  }

  .language-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: rgba(10, 10, 15, 0.95);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 0.5rem;
    margin-top: 0.5rem;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    z-index: 1000;
  }

  .language-selector.open .language-dropdown {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .language-option {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    transition: background-color 0.3s ease;
    border-radius: 0.25rem;
    margin: 0.25rem;
  }

  .language-option:hover {
    background: rgba(255, 255, 255, 0.1);
  }

  .language-option-name {
    color: white;
    font-size: 0.9rem;
  }

  /* Flag sprite positions */
  .lang-icon-en {
    background-position: -450px -60px;
  }
  .lang-icon-es {
    background-position: -100px -75px;
  }
  .lang-icon-ca {
    background-position: -0px -45px;
  }
  .lang-icon-de {
    background-position: -50px -60px;
  }
  
  /* Mobile menu toggle */
  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    gap: 0.25rem;
  }
  
  .hamburger-line {
    width: 25px;
    height: 3px;
    background: var(--space-white);
    transition: all 0.3s ease;
    border-radius: 2px;
  }
  
  .mobile-menu-toggle.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(6px, 6px);
  }
  
  .mobile-menu-toggle.active .hamburger-line:nth-child(2) {
    opacity: 0;
  }
  
  .mobile-menu-toggle.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(6px, -6px);
  }

  @media (max-width: 768px) {
    .nav-menu {
      position: fixed;
      top: 80px;
      left: 0;
      right: 0;
      background: rgba(10, 10, 15, 0.95);
      backdrop-filter: blur(20px);
      border-top: 1px solid rgba(255, 255, 255, 0.1);
      flex-direction: column;
      padding: 2rem 0;
      transform: translateY(-100%);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
      z-index: 999;
    }
    
    .nav-menu.active {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }
    
    .mobile-menu-toggle {
      display: flex;
    }
    
    .nav-actions {
      gap: 0.5rem;
    }
    
    .nav-actions .btn {
      padding: 8px 16px;
      font-size: 0.9rem;
    }
    
    .logo-img {
      height: 32px;
    }
    
    .logo-text {
      font-size: 1.25rem;
    }

    .language-display {
      min-width: 100px;
      padding: 0.4rem 0.6rem;
    }

    .language-name {
      font-size: 0.8rem;
    }
  }
  
  @media (max-width: 480px) {
    .logo-text {
      display: none;
    }
    
    .logo-img {
      height: 36px;
    }

    .language-display {
      min-width: 80px;
      padding: 0.3rem 0.5rem;
    }

    .language-name {
      display: none;
    }
  }
</style>
<script>
  function changeLanguage(newLang) {
    const currentPath = window.location.pathname;
    const segments = currentPath.split('/');
    
    // Remove current language from path if it exists
    if (segments[1] && ['en', 'es', 'ca', 'de'].includes(segments[1])) {
      segments.splice(1, 1);
    }
    
    // Add new language prefix (except for English)
    const newPath = newLang === 'en' 
      ? segments.join('/') || '/'
      : `/${newLang}${segments.join('/') || '/'}`;
    
    // Save user's preferred language
    localStorage.setItem('user-preferred-lang', newLang);
    
    window.location.href = newPath;
  }
  
  // Handle dropdown toggle
  function toggleLanguageDropdown() {
    const selector = document.querySelector('.language-selector');
    selector.classList.toggle('open');
  }
  
  // Close dropdown when clicking outside
  function closeLanguageDropdown(event) {
    const selector = document.querySelector('.language-selector');
    if (!selector.contains(event.target)) {
      selector.classList.remove('open');
    }
  }
  
  // Initialize dropdown functionality
  document.addEventListener('DOMContentLoaded', function() {
    const languageDisplay = document.getElementById('language-display');
    if (languageDisplay) {
      languageDisplay.addEventListener('click', toggleLanguageDropdown);
    }
    
    document.addEventListener('click', closeLanguageDropdown);
  });
  
  // Make function global
  window.changeLanguage = changeLanguage;
  
  // Mobile menu functionality
  function toggleMobileMenu() {
    const navMenu = document.getElementById('navMenu');
    const mobileToggle = document.getElementById('mobileMenuToggle');
    
    const isActive = navMenu.classList.contains('active');
    
    navMenu.classList.toggle('active');
    mobileToggle.classList.toggle('active');
    
    // Update ARIA attributes
    mobileToggle.setAttribute('aria-expanded', !isActive);
    navMenu.setAttribute('aria-hidden', isActive);
  }
  
  // Initialize mobile menu
  document.addEventListener('DOMContentLoaded', function() {
    const mobileToggle = document.getElementById('mobileMenuToggle');
    if (mobileToggle) {
      mobileToggle.addEventListener('click', toggleMobileMenu);
    }
    
    // Close mobile menu when clicking on a link
    const navLinks = document.querySelectorAll('.nav-menu a');
    navLinks.forEach(link => {
      link.addEventListener('click', () => {
        const navMenu = document.getElementById('navMenu');
        const mobileToggle = document.getElementById('mobileMenuToggle');
        
        navMenu.classList.remove('active');
        mobileToggle.classList.remove('active');
        mobileToggle.setAttribute('aria-expanded', 'false');
        navMenu.setAttribute('aria-hidden', 'true');
      });
    });
    
    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        const navMenu = document.getElementById('navMenu');
        const mobileToggle = document.getElementById('mobileMenuToggle');
        
        if (navMenu.classList.contains('active')) {
          navMenu.classList.remove('active');
          mobileToggle.classList.remove('active');
          mobileToggle.setAttribute('aria-expanded', 'false');
          navMenu.setAttribute('aria-hidden', 'true');
          mobileToggle.focus();
        }
      }
    });
  });
</script>
