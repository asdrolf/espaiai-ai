---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE, LANGUAGES } from '../consts';
import { getLangFromUrl, useTranslations } from '../utils/i18n';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<header class="header">
  <div class="container">
    <nav class="nav">
      <div class="nav-brand">
        <a href={lang === 'en' ? '/' : `/${lang}/`} class="logo">
          <img src="/logo.png" alt="ESPAI.AI Logo" class="logo-img" />
          <span class="logo-text">{SITE_TITLE}</span>
        </a>
      </div>
      
      <div class="nav-menu">
        <HeaderLink href={lang === 'en' ? '/' : `/${lang}/`}>{t('nav.home')}</HeaderLink>
        <HeaderLink href={lang === 'en' ? '/about' : `/${lang}/about`}>{t('nav.about')}</HeaderLink>
        <!-- <HeaderLink href={lang === 'en' ? '/blog' : `/${lang}/blog`}>{t('nav.blog')}</HeaderLink> -->
        <HeaderLink href={lang === 'en' ? '/pricing' : `/${lang}/pricing`}>{t('nav.pricing')}</HeaderLink>
        <HeaderLink href={lang === 'en' ? '/faq' : `/${lang}/faq`}>{t('nav.faq')}</HeaderLink>
      </div>
      
      <div class="nav-actions">
        <div class="language-selector">
          <select id="language-select" onchange="changeLanguage(this.value)">
            {Object.entries(LANGUAGES).map(([code, name]) => (
              <option value={code} selected={code === lang}>{name}</option>
            ))}
          </select>
        </div>
        <a href={lang === 'en' ? '/contact' : `/${lang}/contact`} class="btn btn-secondary">Contact</a>
      </div>
    </nav>
  </div>
</header>

<style>
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(10, 10, 15, 0.9);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }
  
  .nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 0;
  }
  
  .logo {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  .logo:hover {
    transform: scale(1.02);
  }
  
  .logo-img {
    height: 40px;
    width: auto;
    filter: drop-shadow(0 0 10px rgba(6, 182, 212, 0.3));
    transition: all 0.3s ease;
  }
  
  .logo:hover .logo-img {
    filter: drop-shadow(0 0 15px rgba(6, 182, 212, 0.5));
  }
  
  .logo-text {
    font-size: 1.5rem;
    font-weight: 700;
    background: var(--accent-gradient);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  
  .nav-menu {
    display: flex;
    gap: 2rem;
    align-items: center;
  }
  
  .nav-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
  }
  
  @media (max-width: 768px) {
    .nav-menu {
      display: none;
    }
    
    .nav-actions {
      gap: 0.5rem;
    }
    
    .nav-actions .btn {
      padding: 8px 16px;
      font-size: 0.9rem;
    }
    
    .logo-img {
      height: 32px;
    }
    
    .logo-text {
      font-size: 1.25rem;
    }
  }
  
  @media (max-width: 480px) {
    .logo-text {
      display: none;
    }
    
    .logo-img {
      height: 36px;
    }
  }
</style>

<script>
  function changeLanguage(newLang) {
    const currentPath = window.location.pathname;
    const segments = currentPath.split('/');
    
    // Remove current language from path if it exists
    if (segments[1] && ['en', 'es', 'ca', 'de'].includes(segments[1])) {
      segments.splice(1, 1);
    }
    
    // Add new language prefix (except for English)
    const newPath = newLang === 'en' 
      ? segments.join('/') || '/'
      : `/${newLang}${segments.join('/') || '/'}`;
    
    window.location.href = newPath;
  }
  
  // Make function global
  window.changeLanguage = changeLanguage;
</script>
